
package airline;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Airline", targetNamespace = "http://Airline/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Airline {


    /**
     * 
     * @param d
     * @param t
     * @param e
     * @param b
     * @param c
     * @param a
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "book_ticket")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "book_ticket", targetNamespace = "http://Airline/", className = "airline.BookTicket")
    @ResponseWrapper(localName = "book_ticketResponse", targetNamespace = "http://Airline/", className = "airline.BookTicketResponse")
    @Action(input = "http://Airline/Airline/book_ticketRequest", output = "http://Airline/Airline/book_ticketResponse")
    public String bookTicket(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        int b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        String d,
        @WebParam(name = "e", targetNamespace = "")
        int e,
        @WebParam(name = "t", targetNamespace = "")
        int t);

    /**
     * 
     * @param d
     * @param t
     * @param e
     * @param b
     * @param c
     * @param a
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "cancel_ticket")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancel_ticket", targetNamespace = "http://Airline/", className = "airline.CancelTicket")
    @ResponseWrapper(localName = "cancel_ticketResponse", targetNamespace = "http://Airline/", className = "airline.CancelTicketResponse")
    @Action(input = "http://Airline/Airline/cancel_ticketRequest", output = "http://Airline/Airline/cancel_ticketResponse")
    public String cancelTicket(
        @WebParam(name = "a", targetNamespace = "")
        String a,
        @WebParam(name = "b", targetNamespace = "")
        int b,
        @WebParam(name = "c", targetNamespace = "")
        String c,
        @WebParam(name = "d", targetNamespace = "")
        String d,
        @WebParam(name = "e", targetNamespace = "")
        int e,
        @WebParam(name = "t", targetNamespace = "")
        int t);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "available_ticket")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "available_ticket", targetNamespace = "http://Airline/", className = "airline.AvailableTicket")
    @ResponseWrapper(localName = "available_ticketResponse", targetNamespace = "http://Airline/", className = "airline.AvailableTicketResponse")
    @Action(input = "http://Airline/Airline/available_ticketRequest", output = "http://Airline/Airline/available_ticketResponse")
    public String availableTicket();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "customer_history")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "customer_history", targetNamespace = "http://Airline/", className = "airline.CustomerHistory")
    @ResponseWrapper(localName = "customer_historyResponse", targetNamespace = "http://Airline/", className = "airline.CustomerHistoryResponse")
    @Action(input = "http://Airline/Airline/customer_historyRequest", output = "http://Airline/Airline/customer_historyResponse")
    public String customerHistory();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Airline/", className = "airline.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Airline/", className = "airline.HelloResponse")
    @Action(input = "http://Airline/Airline/helloRequest", output = "http://Airline/Airline/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
